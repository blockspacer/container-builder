#!/bin/bash

export OS_CACERT=`pwd`/OpenStack.cer
echo "using OS_CACERT="$OS_CACERT

# OpenStack credentials
source ./openrc.sh

QUEUE_HOSTNAME=`cat ResourceQueueIP`
QUEUE_PORT="8080"

# Destroy any existing builder if one exists
./DestroyBuilderImage --no_source

# Get script directory
SCRIPT_DIR=$(dirname $0)

# General VM settings
BOOTIMG="CADES_Ubuntu16.04_v20170804_1"
ZONE="nova"
FLAVOR="m1.medium"
NIC=$(openstack network show -c id --format value or_provider_general_extnetwork1)
KEY="ContainerBuilderKey"

# Insert ResourceQueue information into our provisioning script
cp ${SCRIPT_DIR}/ProvisionBuilder.sh CustomProvisionBuilder.sh
sed -i "2i2 export QUEUE_HOSTNAME=${QUEUE_HOSTNAME}" ./CustomProvisionBuilder.sh
sed -i "3i3 export QUEUE_PORT=${QUEUE_PORT}" ./CustomProvisionBuilder.sh

echo "This make take some time."

# Startup new VM
VM_UUID=$(openstack server create                            \
    --image "${BOOTIMG}"                                     \
    --flavor "${FLAVOR}"                                     \
    --availability-zone "${ZONE}"                            \
    --nic net-id="${NIC}"                                    \
    --key-name "${KEY}"                                      \
    --user-data CustomProvisionBuilder.sh                    \
    --wait                                                   \
    "BuilderMaster" | grep "\<id\>" | awk '{print $4}');

# Remove custom provisioning script
rm ./CustomProvisionBuilder.sh

echo "Creating builder snapshot image"
openstack server stop --wait ${VM_UUID}

openstack image create --wait ${VM_UUID} "BuilderImage"

echo "Deleting builder master instance"
openstack server delete --wait BuilderMaster

echo "Finished creating BuilderImage"