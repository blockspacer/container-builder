#!/usr/bin/env bash

set -e
set -o xtrace

# Disable TCP time stamps - ORNL seems to be jacking them up and causing the connection to drop at the 5 minute mark
echo 0 > /proc/sys/net/ipv4/tcp_timestamps # this session
cat << EOF > /etc/sysctl.d/51-net.conf     # permanent
net.ipv4.tcp_timestamps = 0
EOF

# Create non root builder user
useradd --create-home --home-dir /home/builder --shell /bin/bash builder

# Allow builder to run singularity as root
echo 'builder ALL=(ALL) NOPASSWD: /usr/local/bin/singularity' > /etc/sudoers.d/builder
echo 'builder ALL=(ALL) NOPASSWD: /usr/bin/unbuffer' >> /etc/sudoers.d/builder
chmod 0440 /etc/sudoers.d/builder

apt-get -y update
apt-get -y install expect
apt-get -y install yum rpm

#####################################
# begin ppc64le QUEMU stuff
######################################

# Add support of ppc64le arch
sudo apt-get install -y qemu binfmt-support zlib1g-dev libglib2.0-dev libpixman-1-dev libfdt-dev libpython-stdlib

# Install a newer qemu from source to support ppc64le
wget 'https://github.com/qemu/qemu/archive/v2.11.0.tar.gz'
tar xf ./v2.11.0.tar.gz
cd qemu-2.11.0
mkdir build
cd build
../configure --static
make
sudo make install

# Add ppc64le repos to apt sources
cat << EOF > /etc/apt/sources.list
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ xenial main restricted multiverse
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ xenial-updates multiverse
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse
deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ xenial main restricted universe
deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main restricted universe
EOF

# Install ppc64le glibc
sudo dpkg --add-architecture ppc64el
sudo apt-get update
sudo apt-get install libc6:ppc64el libc6-dev:ppc64el

# A dirty hack to copy the custom qemu static binaries over top of the distro provided dynamically linked binaries
sudo cp -r /usr/local/bin/qemu-* /usr/bin

#####################################
# End ppc64le
#####################################

# Install Singularity
export VERSION=2.4
wget https://github.com/singularityware/singularity/releases/download/${VERSION}/singularity-${VERSION}.tar.gz
tar xvf singularity-${VERSION}.tar.gz
cd singularity-${VERSION}
./configure --prefix=/usr/local
make
make install

# Update cmake version
cd /
wget https://cmake.org/files/v3.9/cmake-3.9.5-Linux-x86_64.sh
chmod +x ./cmake-3.9.5-Linux-x86_64.sh
./cmake-3.9.5-Linux-x86_64.sh --skip-license
ln -s /cmake-3.9.5-Linux-x86_64/bin/* /usr/local/bin
cd /
rm -rf /cmake-3.9.5-Linux-x86_64

# Install a new version of boost
cd /
wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz
tar xf boost_1_65_1.tar.gz
cd boost_1_65_1
./bootstrap.sh --with-libraries=filesystem,regex,system,coroutine,serialization,log,thread,program_options
./b2 install || :
rm -rf /boost_1_65_1

# Install builder_server
cd /
git clone https://code.ornl.gov/olcf/ContainerBuilder.git
cd ContainerBuilder
mkdir build && cd build
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="/usr/local" ..
make
make install
rm -rf /ContainerBuilder

# Create systemd script and launch the Builder daemon
cat << EOF > /etc/systemd/system/builder_server.service
[Unit]
Description=builder_server daemon
After=network.target

[Service]
Type=simple
User=builder
WorkingDirectory=/home/builder
Environment="LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib"
ExecStart=/usr/local/bin/builder_server
Restart=no

[Install]
WantedBy=multi-user.target
EOF
systemctl enable builder_server

# Create singularity ppc64le builder image
sudo /usr/local/bin/singularity build /home/builder/ppc_builder.img /ContainerBuilder/Scripts/ppc_builder.def

reboot

# To check that the Builder service is running
# sudo netstat -plnt | grep builder_server
# systemctl status
